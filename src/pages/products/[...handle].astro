---
import { getProductByHandle } from "@utils/shopify";
import { setCache } from "@utils/cache";

import Header from "@sections/header.astro";
import Footer from "@sections/footer.astro";
import ShopLayout from "@layouts/layout.astro";
import NotFoundLayout from "../../layouts/NotFoundLayout.astro";
import AddToCartForm from "../../components/AddToCartForm.svelte";
import ProductImageGallery from "../../components/ProductImageGallery.astro";
import ProductBreadcrumb from "../../components/ProductBreadcrumb.astro";
import ProductInformations from "../../components/ProductInformations.astro";
import ProductRecommendations from "../../components/ProductRecommendations.astro";
import ProductReviews from "../../components/ProductReviews.astro";
import ProductAccordions from "../../components/ProductAccordions.astro";

const { handle } = Astro.params;
const headers = Astro.request.headers;
const ip = headers.get("x-vercel-forwarded-for") || Astro.clientAddress;
const product = await getProductByHandle({ handle: handle || "", buyerIP: ip });

if (!product) {
  Astro.response.status = 404;
}

const firstVariant = product?.variants.nodes[0];
setCache.short(Astro);
---
 <Header />
{
  !product ? (
    <NotFoundLayout title="Product not found" message="Product not found" />
  ) : (
    <ShopLayout title={product.title}>
      <div class="container pt-6 primary-font">
        <ProductBreadcrumb title={product.title} />
      </div>

      <section class="container">
        <div class="pb-16 pt-6 lg:grid lg:grid-cols-12 lg:gap-20">
          <div class="lg:col-span-7">
            <ProductImageGallery images={product.images} />
          </div>

          <div class="mt-8 lg:col-span-5 lg:mt-0 primary-font">
            <ProductInformations
              title={product.title}
              price={firstVariant?.priceV2}
            />

            <div>
              <AddToCartForm
                client:load
                variantId={firstVariant?.id}
                variantQuantityAvailable={firstVariant?.quantityAvailable}
                variantAvailableForSale={firstVariant?.availableForSale}
              />
            </div>

            <div class="mt-8">
              <ProductAccordions />
            </div>
          </div>
        </div>
      </section>

      <section class="container">
        <ProductReviews />
      </section>

      <section class="container">
        <ProductRecommendations productId={product.id} buyerIP={ip} />
      </section>
    </ShopLayout>
  )
}
 <Footer />
